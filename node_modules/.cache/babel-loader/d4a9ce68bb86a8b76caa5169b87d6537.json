{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peem\\\\Desktop\\\\program\\\\toturial\\\\Toturial By Olan\\\\React\\\\workshop\\\\client\\\\src\\\\components\\\\monitor\\\\Monitor.js\";\nimport React, { Component } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ProductList from \"../Product/ProductList\";\n\nclass Monitor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPrice: 0,\n      orders: []\n    };\n    this.addOrder = this.addOrder.bind(this);\n    this.delOrder = this.delOrder.bind(this);\n    this.cancelOrder = this.cancelOrder.bind(this);\n    this.confirmOrder = this.confirmOrder.bind(this);\n  }\n\n  addOrder(product) {\n    let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\n\n    if (findOrder) {\n      findOrder.quantity++;\n    } else {\n      this.state.orders.push({\n        product: product,\n        quantity: 1\n      });\n    }\n\n    const totalPrice = this.state.totalPrice + parseInt(product.unitPrice);\n    this.setState({\n      totalPrice: totalPrice,\n      orders: this.state.orders\n    });\n  }\n\n  delOrder(product) {\n    let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\n    let resultOrder = this.state.orders.filter(order => order.product.productId != product.productId);\n    const totalPrice = this.state.totalPrice - findOrder.quantity * parseInt(findOrder.product.unitPrice);\n    this.setState({\n      totalPrice: totalPrice,\n      orders: resultOrder\n    });\n  }\n\n  cancelOrder() {\n    this.setState({\n      totalPrice: 0,\n      orders: []\n    });\n  }\n\n  confirmOrder() {\n    const {\n      totalPrice,\n      orders\n    } = this.state;\n    axios.post(\"http://localhost:3001/orders\", {\n      orderData: new Data(),\n      totalPrice,\n      orders\n    }).than(res => {\n      this.setState({\n        totalPrice: 0,\n        orders: []\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      products: this.props.products,\n      onAddOrder: this.addOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      totalPrice: this.state.totalPrice,\n      orders: this.state.orders,\n      onDelOrder: this.delOrder,\n      onCancelOrder: this.cancelOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Monitor;","map":{"version":3,"sources":["C:/Users/Peem/Desktop/program/toturial/Toturial By Olan/React/workshop/client/src/components/monitor/Monitor.js"],"names":["React","Component","Calculator","ProductList","Monitor","constructor","props","state","totalPrice","orders","addOrder","bind","delOrder","cancelOrder","confirmOrder","product","findOrder","find","order","productId","quantity","push","parseInt","unitPrice","setState","resultOrder","filter","axios","post","orderData","Data","than","res","render","products"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Calculator from \"./Calculator\";\r\nimport ProductList from \"../Product/ProductList\";\r\n\r\nclass Monitor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { totalPrice: 0, orders: [] };\r\n        this.addOrder = this.addOrder.bind(this);\r\n        this.delOrder = this.delOrder.bind(this);\r\n        this.cancelOrder = this.cancelOrder.bind(this);\r\n        this.confirmOrder = this.confirmOrder.bind(this);\r\n    }\r\n\r\n\r\n    addOrder(product) {\r\n        let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\r\n        if (findOrder) {\r\n            findOrder.quantity++;\r\n        }\r\n        else {\r\n            this.state.orders.push({ product: product, quantity: 1 });\r\n        }\r\n        const totalPrice = this.state.totalPrice + parseInt(product.unitPrice);\r\n        this.setState({ totalPrice: totalPrice, orders: this.state.orders });\r\n    }\r\n\r\n    delOrder(product) {\r\n        let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\r\n        let resultOrder = this.state.orders.filter(order =>order.product.productId != product.productId)\r\n        const totalPrice = this.state.totalPrice - (findOrder.quantity * parseInt(findOrder.product.unitPrice));\r\n        this.setState({totalPrice: totalPrice, orders: resultOrder});\r\n    }\r\n\r\n    cancelOrder(){\r\n        this.setState({totalPrice : 0, orders : []});\r\n    }\r\n\r\n    confirmOrder(){\r\n        const{totalPrice, orders} =this.state;\r\n\r\n        axios.post(\"http://localhost:3001/orders\", {orderData : new Data, totalPrice, orders})\r\n        .than(res=>{this.setState({totalPrice : 0, orders : []});})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9\">\r\n                        <ProductList products={this.props.products} onAddOrder={this.addOrder} />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <Calculator totalPrice={this.state.totalPrice} orders={this.state.orders} onDelOrder={this.delOrder} onCancelOrder={this.cancelOrder}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Monitor;"]},"metadata":{},"sourceType":"module"}