{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peem\\\\Desktop\\\\program\\\\toturial\\\\Toturial By Olan\\\\React\\\\workshop\\\\client\\\\src\\\\components\\\\monitor\\\\Monitor.js\";\nimport React, { Component } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ProductList from \"../Product/ProductList\";\n\nclass Monitor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPrice: 0,\n      orders: []\n    };\n    this.addOrder = this.addOrder.bind(this);\n  }\n\n  addOrder(product) {\n    let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\n\n    if (findOrder) {\n      findOrder.quantity++;\n    } else {\n      this.state.orders.push({\n        product: product,\n        quantity: 1\n      });\n    }\n\n    const totalPrice = this.state.totalPrice + parseInt(product.unitPrice);\n    this.setState({\n      totalPrice: totalPrice,\n      orders: this.state.orders\n    });\n  }\n\n  delOrder(produce) {\n    let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\n    let resultOrder = this.state.orders.filter(order => order.product.productId != product.productId);\n    const totalPrice = this.state.totalPrice - findOrder.quantity * parseInt(findOrder.product.unitPrice);\n    this.setState({\n      totalPrice: totalPrice,\n      order: this.state.resultOrder\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      products: this.props.products,\n      onAddOrder: this.addOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      totalPrice: this.state.totalPrice,\n      orders: this.state.orders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Monitor;","map":{"version":3,"sources":["C:/Users/Peem/Desktop/program/toturial/Toturial By Olan/React/workshop/client/src/components/monitor/Monitor.js"],"names":["React","Component","Calculator","ProductList","Monitor","constructor","props","state","totalPrice","orders","addOrder","bind","product","findOrder","find","order","productId","quantity","push","parseInt","unitPrice","setState","delOrder","produce","resultOrder","filter","render","products"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Calculator from \"./Calculator\";\r\nimport ProductList from \"../Product/ProductList\";\r\n\r\nclass Monitor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { totalPrice: 0, orders: [] };\r\n        this.addOrder = this.addOrder.bind(this);\r\n    }\r\n\r\n\r\n    addOrder(product) {\r\n        let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\r\n        if (findOrder) {\r\n            findOrder.quantity++;\r\n        }\r\n        else {\r\n            this.state.orders.push({ product: product, quantity: 1 });\r\n        }\r\n        const totalPrice = this.state.totalPrice + parseInt(product.unitPrice);\r\n        this.setState({ totalPrice: totalPrice, orders: this.state.orders });\r\n    }\r\n\r\n    delOrder(produce) {\r\n        let findOrder = this.state.orders.find(order => order.product.productId == product.productId);\r\n        let resultOrder = this.state.orders.filter(order =>order.product.productId != product.productId)\r\n        const totalPrice = this.state.totalPrice - (findOrder.quantity * parseInt(findOrder.product.unitPrice));\r\n        this.setState({totalPrice: totalPrice, order: this.state.resultOrder});\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9\">\r\n                        <ProductList products={this.props.products} onAddOrder={this.addOrder} />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <Calculator totalPrice={this.state.totalPrice} orders={this.state.orders} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Monitor;"]},"metadata":{},"sourceType":"module"}